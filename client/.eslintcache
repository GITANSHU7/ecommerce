[{"F:\\ecommerce\\client\\src\\index.js":"1","F:\\ecommerce\\client\\src\\App.js":"2","F:\\ecommerce\\client\\src\\reportWebVitals.js":"3","F:\\ecommerce\\client\\src\\pages\\auth\\Login.js":"4","F:\\ecommerce\\client\\src\\pages\\Home.js":"5","F:\\ecommerce\\client\\src\\pages\\auth\\Register.js":"6","F:\\ecommerce\\client\\src\\components\\nav\\Header.js":"7","F:\\ecommerce\\client\\src\\pages\\Contact.js":"8","F:\\ecommerce\\client\\src\\pages\\About.js":"9","F:\\ecommerce\\client\\src\\logo.js":"10","F:\\ecommerce\\client\\src\\firebase.js":"11","F:\\ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js":"12","F:\\ecommerce\\client\\src\\reducers\\index.js":"13","F:\\ecommerce\\client\\src\\reducers\\userReducer.js":"14","F:\\ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js":"15","F:\\ecommerce\\client\\src\\functions\\auth.js":"16","F:\\ecommerce\\client\\src\\pages\\user\\History.js":"17","F:\\ecommerce\\client\\src\\components\\routes\\UserRoute.js":"18","F:\\ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"19","F:\\ecommerce\\client\\src\\components\\nav\\UserNav.js":"20","F:\\ecommerce\\client\\src\\pages\\user\\Password.js":"21","F:\\ecommerce\\client\\src\\pages\\user\\Wishlist.js":"22","F:\\ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js":"23","F:\\ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"24","F:\\ecommerce\\client\\src\\pages\\admin\\brand\\BrandCreate.js":"25","F:\\ecommerce\\client\\src\\components\\nav\\AdminNav.js":"26","F:\\ecommerce\\client\\src\\functions\\brand.js":"27","F:\\ecommerce\\client\\src\\pages\\admin\\brand\\CategoryCreate.js":"28","F:\\ecommerce\\client\\src\\functions\\category.js":"29","F:\\ecommerce\\client\\src\\pages\\admin\\brand\\BrandUpdate.js":"30","F:\\ecommerce\\client\\src\\pages\\admin\\brand\\CategoryUpdate.js":"31","F:\\ecommerce\\client\\src\\components\\forms\\BrandForm.js":"32","F:\\ecommerce\\client\\src\\components\\forms\\LocalSearch.js":"33","F:\\ecommerce\\client\\src\\pages\\admin\\model\\ModelCreate.js":"34","F:\\ecommerce\\client\\src\\functions\\model.js":"35","F:\\ecommerce\\client\\src\\pages\\admin\\model\\ModelUpdate.js":"36","F:\\ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js":"37","F:\\ecommerce\\client\\src\\functions\\product.js":"38","F:\\ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js":"39","F:\\ecommerce\\client\\src\\components\\forms\\FileUpload.js":"40","F:\\ecommerce\\client\\src\\components\\cards\\AdminProductCard.js":"41","F:\\ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.js":"42","F:\\ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"43","F:\\ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js":"44"},{"size":857,"mtime":1608491686924,"results":"45","hashOfConfig":"46"},{"size":3952,"mtime":1611139476074,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":4552,"mtime":1609390156703,"results":"49","hashOfConfig":"46"},{"size":775,"mtime":1611421357845,"results":"50","hashOfConfig":"46"},{"size":3032,"mtime":1609603205745,"results":"51","hashOfConfig":"46"},{"size":2396,"mtime":1609653302770,"results":"52","hashOfConfig":"46"},{"size":767,"mtime":1608051413108,"results":"53","hashOfConfig":"46"},{"size":763,"mtime":1608051389911,"results":"54","hashOfConfig":"46"},{"size":196,"mtime":1609392128494,"results":"55","hashOfConfig":"46"},{"size":600,"mtime":1608367150922,"results":"56","hashOfConfig":"46"},{"size":3372,"mtime":1609603123922,"results":"57","hashOfConfig":"46"},{"size":187,"mtime":1608491232981,"results":"58","hashOfConfig":"46"},{"size":251,"mtime":1608491738164,"results":"59","hashOfConfig":"46"},{"size":1722,"mtime":1609602782037,"results":"60","hashOfConfig":"46"},{"size":677,"mtime":1609520653089,"results":"61","hashOfConfig":"46"},{"size":342,"mtime":1609507239220,"results":"62","hashOfConfig":"46"},{"size":396,"mtime":1609521780775,"results":"63","hashOfConfig":"46"},{"size":668,"mtime":1609650089650,"results":"64","hashOfConfig":"46"},{"size":618,"mtime":1609507131118,"results":"65","hashOfConfig":"46"},{"size":1774,"mtime":1609514477717,"results":"66","hashOfConfig":"46"},{"size":345,"mtime":1609512706910,"results":"67","hashOfConfig":"46"},{"size":469,"mtime":1610823711997,"results":"68","hashOfConfig":"46"},{"size":834,"mtime":1609520136107,"results":"69","hashOfConfig":"46"},{"size":3401,"mtime":1610437863933,"results":"70","hashOfConfig":"46"},{"size":2629,"mtime":1611511928217,"results":"71","hashOfConfig":"46"},{"size":908,"mtime":1610480106068,"results":"72","hashOfConfig":"46"},{"size":3422,"mtime":1610036031003,"results":"73","hashOfConfig":"46"},{"size":816,"mtime":1610035785662,"results":"74","hashOfConfig":"46"},{"size":1811,"mtime":1610181887857,"results":"75","hashOfConfig":"46"},{"size":2117,"mtime":1610127086785,"results":"76","hashOfConfig":"46"},{"size":540,"mtime":1610127183051,"results":"77","hashOfConfig":"46"},{"size":492,"mtime":1610126497665,"results":"78","hashOfConfig":"46"},{"size":4156,"mtime":1610639358900,"results":"79","hashOfConfig":"46"},{"size":786,"mtime":1610164374388,"results":"80","hashOfConfig":"46"},{"size":2843,"mtime":1610184058874,"results":"81","hashOfConfig":"46"},{"size":3726,"mtime":1611312521687,"results":"82","hashOfConfig":"46"},{"size":844,"mtime":1611306106965,"results":"83","hashOfConfig":"46"},{"size":4821,"mtime":1611420999782,"results":"84","hashOfConfig":"46"},{"size":3304,"mtime":1611503018582,"results":"85","hashOfConfig":"46"},{"size":948,"mtime":1610875800633,"results":"86","hashOfConfig":"46"},{"size":2051,"mtime":1610874280252,"results":"87","hashOfConfig":"46"},{"size":4499,"mtime":1611307125969,"results":"88","hashOfConfig":"46"},{"size":5037,"mtime":1611308710249,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1mognre",{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"92"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"92"},"F:\\ecommerce\\client\\src\\index.js",[],["197","198"],"F:\\ecommerce\\client\\src\\App.js",["199","200","201"],"import React , {useEffect, useState} from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./pages/auth/Login\";\nimport Register from \"./pages/auth/Register\";\nimport Home from \"./pages/Home\";\nimport Header from \"./components/nav/Header\";\nimport Contact from \"./pages/Contact\";\nimport About from \"./pages/About\";\nimport logo from \"./logo\"\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport RegisterComplete from \"./pages/auth/RegisterComplete\";\nimport {auth}from './firebase';\nimport {useDispatch} from 'react-redux'\nimport ForgotPassword from './pages/auth/ForgotPassword';\nimport { currentUser } from \"./functions/auth\";\nimport History from \"./pages/user/History\";\nimport UserRoute from \"./components/routes/UserRoute\";\nimport Password from \"./pages/user/Password\";\nimport Wishlist from \"./pages/user/Wishlist\";\nimport AdminDashboard from \"./pages/admin/AdminDashboard\";\nimport AdminRoute from \"./components/routes/AdminRoute\";\nimport BrandCreate from \"./pages/admin/brand/BrandCreate\";\nimport CategoryCreate from \"./pages/admin/brand/CategoryCreate\";\nimport BrandUpdate from \"./pages/admin/brand/BrandUpdate\";\nimport CategoryUpdate from \"./pages/admin/brand/CategoryUpdate\";\nimport ModelCreate from \"./pages/admin/model/ModelCreate\";\nimport ModelUpdate from \"./pages/admin/model/ModelUpdate\";\nimport ProductCreate from \"./pages/admin/product/ProductCreate\";\nimport AllProducts from \"./pages/admin/product/AllProducts\";\nimport ProductUpdate from \"./pages/admin/product/ProductUpdate\";\n\n\n\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  // to check firebase auth state\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult();\n        console.log(\"user\", user);\n        currentUser(idTokenResult.token)\n        .then((res =>  {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name:res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role:res.data.role,\n              _id:res.data._id,\n            }, \n          });\n        }))\n        .catch(err => console.log(err));\n      }\n    });\n    // cleanup\n    return () => unsubscribe();\n  }, []);\n\n\n  return (\n    <>\n    {logo()}\n    <Header />\n    <ToastContainer />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/about\" component={About} />\n      <Route exact path=\"/contact\" component={Contact} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/register\" component={Register} />\n      <Route exact path=\"/register/complete\" component={RegisterComplete} />\n      <Route exact path=\"/forgot/password\" component={ForgotPassword} />\n      <Route exact path=\"/user/history\" component={History} />\n      <UserRoute exact path=\"/user/password\" component={Password} />\n      <UserRoute exact path=\"/user/wishlist\" component={Wishlist} />\n      <AdminRoute exact path=\"/admin/dashboard\" component={AdminDashboard} />\n      <AdminRoute exact path=\"/admin/brand\" component={BrandCreate} />\n      <AdminRoute exact path=\"/admin/category\" component={CategoryCreate} />\n      <AdminRoute exact path=\"/admin/brand/brand-update/:slug\" component={BrandUpdate} />\n      <AdminRoute exact path=\"/admin/category/:slug\" component={CategoryUpdate} />\n      <AdminRoute exact path=\"/admin/model\" component={ModelCreate} />\n      <AdminRoute exact path=\"/admin/model/model-update/:slug\" component={ModelUpdate} />\n      <AdminRoute exact path=\"/admin/product/product-create\" component={ProductCreate} />\n      <AdminRoute exact path=\"/admin/products\" component={AllProducts} />\n      <AdminRoute\n          exact\n          path=\"/admin/product/:slug\"\n          component={ProductUpdate}\n        />\n    </Switch>\n    </>\n  );\n};\n\nexport default App;\n","F:\\ecommerce\\client\\src\\reportWebVitals.js",[],"F:\\ecommerce\\client\\src\\pages\\auth\\Login.js",["202"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth, googleAuthProvider } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"antd\";\r\nimport { MailOutlined, GoogleOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrUpdateUser } from \"../../functions/auth\";\r\n\r\n\r\n\r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setEmail] = useState(\"mayank95866@gmail.com\");\r\n  const [password, setPassword] = useState(\"123456\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) history.push(\"/\");\r\n  }, [user]);\r\n\r\n  let dispatch = useDispatch();\r\n  const roleBasedRedirect =(res) => {\r\n    if (res.data.role === \"admin\") {\r\n      history.push(\"/admin/dashboard\")\r\n    } else {\r\n      history.push(\"/user/history\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    // console.table(email, password);\r\n    try {\r\n      const result = await auth.signInWithEmailAndPassword(email, password);\r\n      // console.log(result);\r\n      const { user } = result;\r\n      const idTokenResult = await user.getIdTokenResult();\r\n\r\n      createOrUpdateUser(idTokenResult.token)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"LOGGED_IN_USER\",\r\n            payload: {\r\n              name: res.data.name,\r\n              email: res.data.email,\r\n              token: idTokenResult.token,\r\n              role: res.data.role,\r\n              _id: res.data._id,\r\n            },\r\n          });\r\n          roleBasedRedirect(res);\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const googleLogin = async () => {\r\n    auth\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(async (result) => {\r\n        const { user } = result;\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: \"LOGGED_IN_USER\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n            roleBasedRedirect(res);\r\n          })\r\n          .catch(err => console.log(err));\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Your email\"\r\n          autoFocus\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Your password\"\r\n        />\r\n      </div>\r\n\r\n      <br />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        type=\"primary\"\r\n        className=\"mb-3\"\r\n        block\r\n        shape=\"round\"\r\n        icon={<MailOutlined />}\r\n        size=\"large\"\r\n        disabled={!email || password.length < 6}\r\n      >\r\n        Login with Email/Password\r\n      </Button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          {loading ? (\r\n            <h4 className=\"text-danger\">Loading...</h4>\r\n          ) : (\r\n            <h4>Login</h4>\r\n          )}\r\n          {loginForm()}\r\n\r\n          <Button\r\n            onClick={googleLogin}\r\n            type=\"danger\"\r\n            className=\"mb-3\"\r\n            block\r\n            shape=\"round\"\r\n            icon={<GoogleOutlined />}\r\n            size=\"large\"\r\n          >\r\n            Login with Google\r\n          </Button>\r\n\r\n          <Link to=\"/forgot/password\" className=\"float-right text-danger\">\r\n           <strong> Forgot Password ??</strong>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\ecommerce\\client\\src\\pages\\Home.js",[],"F:\\ecommerce\\client\\src\\pages\\auth\\Register.js",["203","204"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth , googleAuthProvider} from  \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { Button } from \"antd\";\r\nimport { MailOutlined, GoogleOutlined } from \"@ant-design/icons\";\r\nimport { GoMail } from \"react-icons/go\";\r\n\r\nimport { createOrUpdateUser } from \"../../functions/auth\";\r\n\r\n\r\nconst Register = ({history}) => {\r\n  const [email, setEmail] = useState(\"mayank95866@gmail.com\");\r\n  const {user} =useSelector((state) => ({...state}))\r\n  useEffect(() => {\r\n    if(user &&user.token) history.push('/')\r\n},[user , history])\r\n\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // prevent auto reload\r\n    const config = {\r\n      url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n      handleCodeInApp: true,\r\n    };\r\n\r\n    await auth.sendSignInLinkToEmail(email, config);\r\n    toast.success(\r\n      `Email is sent to ${email}. Click the link to complete your registration.`\r\n    );\r\n    // save user email in local storage\r\n    window.localStorage.setItem(\"emailForRegistration\", email);\r\n  \r\n    // clear state\r\n    setEmail(\"\");\r\n    \r\n  };\r\n\r\n  \r\n\r\n  const googleLogin = async () => {\r\n    auth\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(async (result) => {\r\n        const { user } = result;\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: \"LOGGED_IN_USER\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n          })\r\n          .catch();\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  const registerForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"email\"\r\n        className=\"form-control\"\r\n        placeholder=\"Enter Your Email Id Here\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        autoFocus\r\n      />\r\n        \r\n      <button type=\"submit\" className=\"btn btn-raised\">\r\n        Register\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          <h4>Register</h4>\r\n          \r\n\r\n          {registerForm()}\r\n          <br />\r\n          <Button\r\n            onClick={googleLogin}\r\n            type=\"danger\"\r\n            className=\"mb-3\"\r\n            block\r\n            shape=\"round\"\r\n            icon={<GoogleOutlined />}\r\n            size=\"large\"\r\n          >\r\n            Continue with Google\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","F:\\ecommerce\\client\\src\\components\\nav\\Header.js",["205"],"import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  AppstoreOutlined,\r\n  SettingOutlined,\r\n  UserOutlined,\r\n  UserAddOutlined,\r\n  LogoutOutlined,\r\nInfoCircleTwoTone,\r\n\tContactsTwoTone \r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {GoSignOut} from \"react-icons/go\"\r\nconst { SubMenu, Item } = Menu;\r\n\r\nconst Header = () => {\r\n  const [current, setCurrent] = useState(\"home\");\r\n\r\n  let dispatch = useDispatch();\r\n  let { user } = useSelector((state) => ({ ...state }));\r\n\r\n  let history = useHistory();\r\n\r\n  const handleClick = (e) => {\r\n    // console.log(e.key);\r\n    setCurrent(e.key);\r\n  };\r\n\r\n  const logout = () => {\r\n    firebase.auth().signOut();\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n      payload: null,\r\n    });\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n      <Item key=\"home\" icon={<AppstoreOutlined />}>\r\n        <Link to=\"/\">Home</Link>\r\n      </Item>\r\n\t <Item key=\"About Us\" icon={<InfoCircleTwoTone />}>\r\n        <Link to=\"/about\">About Us</Link>\r\n      </Item>\r\n      <Item key=\"Contact Us\" icon={<ContactsTwoTone />}>\r\n        <Link to=\"/contact\">Contact Us</Link>\r\n      </Item>\r\n\r\n\r\n      {!user && (\r\n        <Item key=\"register\" icon={<UserAddOutlined />} className=\"float-right\">\r\n          <Link to=\"/register\">Register</Link>\r\n        </Item>\r\n      )}\r\n\r\n      {!user && (\r\n        <Item key=\"login\" icon={<UserOutlined />} className=\"float-right\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </Item>\r\n      )}\r\n\r\n      {user && (\r\n        <SubMenu\r\n          icon={<SettingOutlined />}\r\n          title={user.email && user.email}\r\n          className=\"float-right\"\r\n        >\r\n          {user && user.role === \"subscriber\" && (\r\n            <Item><Link to = \"/user/history\">Dashboard</Link></Item>\r\n          )}\r\n           {user && user.role === \"admin\" && (\r\n            <Item><Link to = \"/admin/dashboard\">Dashboard</Link></Item>\r\n          )}\r\n          <Item icon={  <GoSignOut  style={{marginRight:'7px', marginBottom:'-2px'}}/>} onClick={logout}>\r\n            Logout\r\n          </Item>\r\n        </SubMenu>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\ecommerce\\client\\src\\pages\\Contact.js",[],"F:\\ecommerce\\client\\src\\pages\\About.js",[],"F:\\ecommerce\\client\\src\\logo.js",["206"],"import React from 'react'\r\n\r\nconst logo = () => {\r\n\r\n    return (\r\n      <div className=\"text-center\">  \r\n       <img src = \"./images/hypekar2.png\" />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default logo;","F:\\ecommerce\\client\\src\\firebase.js",[],"F:\\ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js",[],"F:\\ecommerce\\client\\src\\reducers\\index.js",[],"F:\\ecommerce\\client\\src\\reducers\\userReducer.js",[],"F:\\ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js",[],"F:\\ecommerce\\client\\src\\functions\\auth.js",[],"F:\\ecommerce\\client\\src\\pages\\user\\History.js",[],"F:\\ecommerce\\client\\src\\components\\routes\\UserRoute.js",["207"],"import React from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingToRedirect from \"./LoadingToRedirect\";\r\n\r\nconst UserRoute = ({ children, ...rest }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  return user && user.token ? <Route {...rest} /> : <LoadingToRedirect />;\r\n};\r\n\r\nexport default UserRoute;\r\n","F:\\ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",["208"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoadingToRedirect = () => {\r\n  const [count, setCount] = useState(2);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((currentCount) => --currentCount);\r\n    },1000);\r\n    // redirect once count is equal to 0\r\n    count === 0 && history.push(\"/\");\r\n    // cleanup\r\n    return () => clearInterval(interval);\r\n  }, [count]);\r\n\r\n  return (\r\n    <div className=\"container p-5 text-center\">\r\n      <p>Redirecting you in {count} seconds</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingToRedirect;\r\n","F:\\ecommerce\\client\\src\\components\\nav\\UserNav.js",[],"F:\\ecommerce\\client\\src\\pages\\user\\Password.js",[],"F:\\ecommerce\\client\\src\\pages\\user\\Wishlist.js",[],"F:\\ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js",["209","210"],"import React, { useEffect, useState } from \"react\";\r\nimport AdminNav from \"../../components/nav/AdminNav\";\r\n\r\nconst AdminDashboard = () => {\r\n \r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n            <h4>All Products</h4>\r\n      \r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","F:\\ecommerce\\client\\src\\components\\routes\\AdminRoute.js",["211"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingToRedirect from \"./LoadingToRedirect\";\r\nimport { currentAdmin } from \"../../functions/auth\";\r\n\r\nconst AdminRoute = ({ children, ...rest }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [ok, setOk] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      currentAdmin(user.token)\r\n        .then((res) => {\r\n          console.log(\"CURRENT ADMIN RES\", res);\r\n          setOk(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"ADMIN ROUTE ERR\", err);\r\n          setOk(false);\r\n        });\r\n    }\r\n  }, [user]);\r\n\r\n  return ok ? <Route {...rest} /> : <LoadingToRedirect />;\r\n};\r\n\r\nexport default AdminRoute;\r\n","F:\\ecommerce\\client\\src\\pages\\admin\\brand\\BrandCreate.js",[],"F:\\ecommerce\\client\\src\\components\\nav\\AdminNav.js",["212"],"F:\\ecommerce\\client\\src\\functions\\brand.js",[],"F:\\ecommerce\\client\\src\\pages\\admin\\brand\\CategoryCreate.js",[],"F:\\ecommerce\\client\\src\\functions\\category.js",[],"F:\\ecommerce\\client\\src\\pages\\admin\\brand\\BrandUpdate.js",["213"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  \r\n  getBrand,\r\n  updateBrand,\r\n} from \"../../../functions/brand\";\r\nimport BrandForm from \"../../../components/forms/BrandForm\";\r\n\r\n\r\n\r\n\r\nconst BrandUpdate = ({history,match}) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\nloadBrand()\r\n  }, []);\r\n\r\n  const loadBrand = () =>\r\n    getBrand(match.params.slug).then((b) => setName(b.data.name));\r\n\r\n   const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(name);\r\n    setLoading(true);\r\n    updateBrand(match.params.slug,{ name }, user.token)\r\n      .then((res) => {\r\n        // console.log(res)\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`\"${res.data.name}\" is updated Successfully`);\r\n        history.push(\"/admin/brand\")\r\n\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);  \r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col\">\r\n          {loading ? ( \r\n            <h4 className=\"text-danger\">Loading..</h4>\r\n          ) : (\r\n            <h4>Update brand</h4>\r\n          )}\r\n          <BrandForm   handleSubmit={handleSubmit}\r\n            name={name}\r\n            setName={setName}/>\r\n          <hr />\r\n         </div>\r\n      </div>\r\n    </div>\r\n  );\r\n          }\r\n\r\n  export default BrandUpdate;\r\n","F:\\ecommerce\\client\\src\\pages\\admin\\brand\\CategoryUpdate.js",["214"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCategory, updateCategory } from \"../../../functions/category\";\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadCategory();\r\n  }, []);\r\n\r\n  const loadCategory = () =>\r\n    getCategory(match.params.slug).then((c) => setName(c.data.name));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(name);\r\n    setLoading(true);\r\n    updateCategory(match.params.slug, { name }, user.token)\r\n      .then((res) => {\r\n        // console.log(res)\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`\"${res.data.name}\" is updated`);\r\n        history.push(\"/admin/category\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n\r\n  const categoryForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n          autoFocus\r\n          required\r\n        />\r\n        <br />\r\n        <button className=\"btn btn-outline-primary\">Update</button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col\">\r\n          {loading ? (\r\n            <h4 className=\"text-danger\">Loading..</h4>\r\n          ) : (\r\n            <h4>Update category</h4>\r\n          )}\r\n          {categoryForm()}\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryUpdate;\r\n","F:\\ecommerce\\client\\src\\components\\forms\\BrandForm.js",[],"F:\\ecommerce\\client\\src\\components\\forms\\LocalSearch.js",[],"F:\\ecommerce\\client\\src\\pages\\admin\\model\\ModelCreate.js",["215"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  createModel,\r\n  getModels,\r\n  removeModel,\r\n} from \"../../../functions/model\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {getBrands} from \"../../../functions/brand\";\r\n\r\nimport {EditOutlined , DeleteOutlined} from '@ant-design/icons';\r\nimport BrandForm from \"../../../components/forms/BrandForm\";\r\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\r\n\r\nimport { Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n\r\nconst ModelCreate = () => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [brands, setBrands] = useState([]);  //list of brands which shows in select option\r\n  const [brand,setBrand] = useState(\"\");\r\n  const [models,setModels] = useState([]);\r\n\r\n\r\n  // step 1  for search\r\nconst [keyword,setKeyword] = useState(\"\")\r\n\r\n\r\n  useEffect(() => {\r\n    loadBrands();\r\n    loadModels();\r\n  }, []);\r\n\r\n  const loadBrands = () =>\r\n    getBrands().then((b) => setBrands(b.data));\r\n\r\n    const loadModels = () =>\r\n    getModels().then((m) => setModels(m.data));\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(name);\r\n    setLoading(true);\r\n    createModel({ name , parent: brand }, user.token)\r\n      .then((res) => {\r\n        // console.log(res)\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`\"${res.data.name}\" is created Successfully`);\r\n        loadModels();\r\n        \r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n\r\nconst handleRemove = async(slug) => {\r\n    if (window.confirm(\"Do you want to delete this\")){\r\n        setLoading(true);\r\n        removeModel(slug,user.token)\r\n        .then(res => {\r\n            setLoading(false);\r\n            toast.error(`${res.data.name} deleted successfully`)\r\n            loadModels();\r\n        })\r\n        .catch((err) => {\r\n            if (err.response.status === 400) \r\n            {\r\n                setLoading(false);\r\n                toast.error(err.response.data)\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n\r\n\r\n//step 4\r\n\r\nconst searched = (keyword) => (b) => b.name.toLowerCase().includes(keyword)\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav  />\r\n        </div>\r\n        <div className=\"col\">\r\n          {loading ? (\r\n            <h4 className=\"text-danger\">Loading..</h4>\r\n          ) : (\r\n            <h4>Create Model</h4>\r\n          )}\r\n\r\n<div className=\"form-group\">\r\n                <label>Choose Brand</label>\r\n                <select name =\"Choose Brand\" className=\"form-control\" onChange={e => setBrand(e.target.value)}>\r\n                    <option>Select Brand</option>\r\n                    {brands.length > 0 && brands.map((b) => <option key = {b._id} value={b._id}>{b.name}</option>)}\r\n                </select>\r\n            </div>\r\n                    \r\n          <BrandForm handleSubmit ={handleSubmit} name ={name} setName= {setName} />\r\n\r\n{/* step 2 & 3 */}\r\n       <LocalSearch keyword = {keyword} setKeyword = {setKeyword} />\r\n          <hr />\r\n         <button className=\"btn btn-outline-info\"> {models.length}</button>\r\n          <br />\r\n          <br /> \r\n   {/* step 5    */}\r\n\r\n          {models.filter(searched(keyword)).map((m) => (\r\n              <div className=\"alert alert-primary\" key={m._id}>{m.name}\r\n              <span onClick ={() => handleRemove(m.slug)} className=\"btn btn-sm float-right\" ><DeleteOutlined className=\"text-danger\" /></span> <Link to={`/admin/model/model-update/${m.slug}`}><span className=\"btn btn-sm float-right\" ><EditOutlined className=\"text-warning\"/></span></Link>\r\n              \r\n              </div>\r\n       ))}  \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelCreate;\r\n","F:\\ecommerce\\client\\src\\functions\\model.js",[],"F:\\ecommerce\\client\\src\\pages\\admin\\model\\ModelUpdate.js",["216","217","218","219","220"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getBrands } from \"../../../functions/brand\";\r\nimport { updateModel, getModel } from \"../../../functions/model\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\r\nimport BrandForm from \"../../../components/forms/BrandForm\";\r\n\r\n\r\n\r\nconst ModelUpdate = ({ match, history }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [brands, setBrands] = useState([]);\r\n  const [parent, setParent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    loadBrands();\r\n    loadModel();\r\n  }, []);\r\n\r\n  const loadBrands = () =>\r\n    getBrands().then((b) => setBrands(b.data));\r\n\r\n  const loadModel = () =>\r\n    getModel(match.params.slug).then((m) => {\r\n      setName(m.data.name);\r\n      setParent(m.data.parent);\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(name);\r\n    setLoading(true);\r\n    updateModel(match.params.slug, { name, parent }, user.token)\r\n      .then((res) => {\r\n        // console.log(res)\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`\"${res.data.name}\" is updated`);\r\n        history.push(\"/admin/model\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col\">\r\n          {loading ? (\r\n            <h4 className=\"text-danger\">Loading..</h4>\r\n          ) : (\r\n            <h4>Update Model category</h4>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label>Parent category</label>\r\n            <select\r\n              name=\"category\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setParent(e.target.value)}\r\n            >\r\n              <option>Please select</option>\r\n              {brands.length > 0 &&\r\n                brands.map((b) => (\r\n                  <option key={b._id} value={b._id} selected={b._id === parent}>\r\n                    {b.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <BrandForm\r\n            handleSubmit={handleSubmit}\r\n            name={name}\r\n            setName={setName}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelUpdate;\r\n","F:\\ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js",["221","222"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { createProduct } from \"../../../functions/product\";\r\nimport ProductCreateForm from \"../../../components/forms/ProductCreateForm\";\r\nimport { getBrands, getBrandModels } from \"../../../functions/brand\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nconst initialState = {\r\n    title: \"\",\r\n    manufacturer : \"\",\r\n    types : [\"Engine Oil\" , \"Air Filter\", \"Tyre\",\"Oil Filter\",\"Battery\", \"Spares and Maintainance Kit\", \"Accessories\"],\r\n    type : \"\",\r\n    description: \"\",\r\n    price : \"\",\r\n    brands: [],\r\n  models:[],\r\n transmissions: [\"Automatic\" , \"Manual\"],\r\n        shipping:\"\",\r\n    fuels: [\"Petrol\" , \"Diesel\" ,\"CNG\" , \"Electric\"],\r\n    fuel: \"\",\r\n    quantity: \"\",\r\n    years: [  \"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\"],\r\n    year: \"\",\r\n    images: []\r\n}\r\n\r\nconst year = [  \"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\"]\r\n\r\n\r\nconst ProductCreate = () => {\r\n  const [values, setValues] = useState(initialState);\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n  const [showModel, setShowModel] = useState(false);\r\n  const [loading , setLoading] = useState(false)\r\n\r\n  // redux\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadBrands();\r\n  }, []);\r\n\r\n  const loadBrands = () =>\r\n    getBrands().then((b) => setValues({ ...values, brands: b.data }));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(`\"${res.data.title}\" is created`);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // if (err.response.status === 400) toast.error(err.response.data);\r\n        toast.error(err.response.data.err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n    // console.log(e.target.name, \" ----- \", e.target.value);\r\n  };\r\n\r\n  const handleBrandChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"CLICKED BRAND\", e.target.value);\r\n    setValues({ ...values, models: [], brand: e.target.value });\r\n    getBrandModels(e.target.value).then((res) => {\r\n      console.log(\"Model OPTIONS ON BRAND CLICK\", res);\r\n      setModelOptions(res.data);\r\n    });\r\n    setShowModel(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className=\"col-md-10\">\r\n          {loading ? ( <LoadingOutlined className=\"text-danger h1\" /> ) : ( <h4>Product create</h4>) }\r\n          \r\n          <hr />\r\n\r\n          {JSON.stringify(values.images)}\r\n\r\n\r\n             <div className=\"p-3\">\r\n             <FileUpload  values = {values} setValues = {setValues}  setLoading = {setLoading} />\r\n\r\n             </div>\r\n            \r\n          <ProductCreateForm\r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n            setValues={setValues}\r\n            values={values}\r\n            handleBrandChange={handleBrandChange}\r\n            modelOptions={modelOptions}\r\n            showmodel={showModel}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCreate;\r\n","F:\\ecommerce\\client\\src\\functions\\product.js",[],"F:\\ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js",["223","224","225","226","227","228","229","230"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductCreateForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  setValues,\r\n  values,\r\n  handleBrandChange,\r\n  modelOptions,\r\n  showModel,\r\n}) => {\r\n  // destructure\r\n  const {\r\n    title,\r\n    manufacturer,\r\n    type ,\r\n\ttypes,\r\n    slug ,\r\n    description,\r\n    price ,\r\n    brand,\r\n\tbrands,\r\n    models,\r\n    transmission,\r\n\t  transmissions,\r\n    fuel,\r\n\tfuels,\r\n    shipping,\r\nyear,\r\nyears,\r\nquantity,\r\nimages,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n\r\n     <div className=\"form-group\">\r\n        <label>Manufacturer</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"manufacturer\"\r\n          className=\"form-control\"\r\n          value={manufacturer}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n    \r\n      <div className=\"form-group\">\r\n        <label>Description</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Price</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          className=\"form-control\"\r\n          value={price}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Shipping</label>\r\n        <select\r\n          name=\"shipping\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        >\r\n          <option>Please select</option>\r\n          <option value=\"No\">No</option>\r\n          <option value=\"Yes\">Yes</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Year</label>\r\n        <select name=\"year\" className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {years.map((y) => (\r\n            <option key={y} value={y}>\r\n              {y}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Quantity</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"quantity\"\r\n          className=\"form-control\"\r\n          value={quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\t  <div className=\"form-group\">\r\n        <label>Fuel</label>\r\n        <select name=\"fuel\" className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {fuels.map((f) => (\r\n            <option key={f} value={f}>\r\n              {f}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\t<div className=\"form-group\">\r\n        <label>Transmission</label>\r\n        <select name=\"transmission\" className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {transmissions.map((t) => (\r\n            <option key={t} value={t}>\r\n              {t}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n\r\n      <div className=\"form-group\">\r\n        <label>Product Type</label>\r\n        <select name=\"type\" className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {types.map((t) => (\r\n            <option key={t} value={t}>\r\n              {t}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"form-group\">\r\n        <label>Brand</label>\r\n        <select\r\n          name=\"brand\"\r\n          className=\"form-control\"\r\n          onChange={handleBrandChange}\r\n        >\r\n          <option>Please select</option>\r\n          {brands.length > 0 &&\r\n            brands.map((b) => (\r\n              <option key={b._id} value={b._id}>\r\n                {b.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n      \r\n        <div>\r\n          <label>Model </label>\r\n          <Select\r\n            mode=\"multiple\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Please select\"\r\n            value={models}\r\n            onChange={(value) => setValues({ ...values, models: value })}\r\n          >\r\n            {modelOptions.length &&\r\n              modelOptions.map((m) => (\r\n                <Option key={m._id} value={m._id}>\r\n                  {m.name}\r\n                </Option>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n      \r\n\r\n      <br />\r\n      <button className=\"btn btn-outline-info\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductCreateForm;\r\n","F:\\ecommerce\\client\\src\\components\\forms\\FileUpload.js",[],"F:\\ecommerce\\client\\src\\components\\cards\\AdminProductCard.js",["231"],"import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport {EditOutlined , DeleteOutlined} from \"@ant-design/icons\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst AdminProductCard = ({ product , handleRemove }) => {\r\n  // destructure\r\n  const { title, description, images , slug } = product;\r\n\r\n  return (\r\n    <Card\r\n      cover={\r\n        <img\r\n          src={images && images.length ? images[0].url : \"\"}\r\n          style={{ height: \"150px\", objectFit: \"cover\" }}\r\n          className=\"p-1\"\r\n        />\r\n      }\r\n\r\n      actions = {[\r\n       <Link to=  {`/admin/product/${slug}`}>\r\n        <EditOutlined className=\"text-warning\" /></Link>,\r\n        <DeleteOutlined  onClick= {() =>handleRemove(slug) } className=\"text-danger\" />,\r\n      ]}\r\n    > \r\n      <Meta title={title} description={`${description && description.substring(0,40)}...`} />  \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AdminProductCard;\r\n","F:\\ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.js",[],"F:\\ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["232","233","234","235"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProduct, updateProduct } from \"../../../functions/product\";\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\r\nimport { getBrandModels, getBrands } from \"../../../functions/brand\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  manufacturer : \"\",\r\n  types : [\"Engine Oil\" , \"Air Filter\", \"Tyre\",\"Oil Filter\",\"Battery\", \"Spares and Maintainance Kit\", \"Accessories\"],\r\n  type : \"\",\r\n  description: \"\",\r\n  price : \"\",\r\n  brand:\"\",\r\nmodels:[],\r\ntransmissions: [\"Automatic\" , \"Manual\"],\r\n      shipping:\"\",\r\n  fuels: [\"Petrol\" , \"Diesel\" ,\"CNG\" , \"Electric\"],\r\n  fuel: \"\",\r\n  quantity: \"\",\r\n  years: [  \"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\"],\r\n  year: \"\",\r\n  images: []\r\n}\r\n\r\nconst ProductUpdate = ({match , history}) => {\r\n //state\r\n \r\n const [values, setValues] = useState(initialState);\r\n  const [brands, setBrands] = useState([]);\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n  const [arrayOfModels, setArrayOfModels] = useState([]);\r\n  const [selectedBrand,setSelectedBrand] = useState(\"\")\r\n  const [loading , setLoading] = useState(false)\r\n\r\n\r\n  // redux\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\nconst { slug } = match.params;\r\n\r\nuseEffect(() => {\r\n  loadProduct();\r\n  loadBrands();\r\n  },[]);\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug).then((p) => {\r\n      // console.log(\"single product\", p);\r\n      // 1 load single proudct\r\n      setValues({ ...values, ...p.data });\r\n      // 2 load single product category subs\r\n      getBrandModels(p.data.brand._id).then((res) => {\r\n        setModelOptions(res.data); // on first load, show default subs\r\n      });\r\n      // 3 prepare array of sub ids to show as default sub values in antd Select\r\n      let arr = [];\r\n      p.data.models.map((m) => {\r\n        arr.push(m._id);\r\n      });\r\n      console.log(\"ARR\", arr);\r\n      setArrayOfModels((prev) => arr); // required for ant design select to work\r\n    });\r\n  };\r\n\r\nconst loadBrands = () =>\r\n    getBrands().then((b) => {\r\n      console.log(\"Get brands\" , b.data);\r\n      setBrands(b.data)\r\n    });\r\n\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  setLoading(true);\r\n  values.models = arrayOfModels;\r\n  values.brand = selectedBrand ? selectedBrand : values.brand;\r\n\r\n  updateProduct(slug,values,user.token)\r\n  .then((res) => {\r\n    setLoading(false);\r\n    toast.success(`\"${res.data.title}\" is updated`)\r\n    history.push(\"/admin/products\");\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    setLoading(false);\r\n    toast.error(err.response.data.err);\r\n  })\r\n};\r\n\r\nconst handleChange = (e) => {\r\n  setValues({ ...values, [e.target.name]: e.target.value });\r\n  // console.log(e.target.name, \" ----- \", e.target.value);\r\n};\r\nconst handleBrandChange = (e) => {\r\n  e.preventDefault();\r\n  console.log(\"CLICKED BRAND\", e.target.value);\r\n  setValues({ ...values, models: [], brand: e.target.value });\r\n  \r\n  setSelectedBrand(e.target.value);  //change\r\n  getBrandModels(e.target.value).then((res) => {\r\n    console.log(\"Model OPTIONS ON BRAND CLICK\", res);\r\n    setModelOptions(res.data);\r\n  });\r\n  \r\n  if (values.brand._id === e.target.value){\r\n    loadProduct();\r\n  }\r\n\r\n  setArrayOfModels([]);\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className=\"col-md-10\">\r\n        <h4>Product Update</h4>\r\n         \r\n        \r\n        <div className=\"p-3\">\r\n             <FileUpload  values = {values} setValues = {setValues}  setLoading = {setLoading} />\r\n\r\n             </div>\r\n\r\n\r\n        <ProductUpdateForm \r\nhandleSubmit={handleSubmit}\r\nhandleChange={handleChange}\r\nsetValues={setValues}\r\nvalues={values}\r\nhandleBrandChange={handleBrandChange}\r\nbrands={brands}\r\nmodelOptions={modelOptions}\r\narrayOfModels={arrayOfModels}\r\nsetArrayOfModels = {setArrayOfModels}\r\nselectedBrand={selectedBrand}\r\n\r\n/>\r\n          <hr />\r\n\r\n     \r\n             </div>\r\n            \r\n       \r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ProductUpdate;\r\n","F:\\ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js",["236","237","238"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductUpdateForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  setValues,\r\n  values,\r\n  handleBrandChange,\r\n  brands,\r\n  modelOptions,\r\n  arrayOfModels,\r\n  setArrayOfModels,\r\n  selectedBrand\r\n}) => {\r\n  // destructure\r\n  const {\r\n    title,\r\n    manufacturer,\r\n    type ,\r\n\ttypes,\r\n    slug ,\r\n    description,\r\n    price ,\r\n    brand,\r\n    models,\r\n    transmission,\r\n\t  transmissions,\r\n    fuel,\r\n\tfuels,\r\n    shipping,\r\nyear,\r\nyears,\r\nquantity,\r\nimages,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n\r\n     <div className=\"form-group\">\r\n        <label>Manufacturer</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"manufacturer\"\r\n          className=\"form-control\"\r\n          value={manufacturer}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n    \r\n      <div className=\"form-group\">\r\n        <label>Description</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Price</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          className=\"form-control\"\r\n          value={price}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Shipping</label>\r\n        <select\r\n          name=\"shipping\"\r\n          className=\"form-control\"\r\n          value={shipping === \"Yes\" ? \"Yes\" : \"No\"}\r\n          onChange={handleChange}\r\n        >\r\n          <option>Please select</option>\r\n          <option value=\"No\">No</option>\r\n          <option value=\"Yes\">Yes</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Year</label>\r\n        <select name=\"year\" value={year} className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {years.map((y) => (\r\n            <option key={y} value={y}>\r\n              {y}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Quantity</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"quantity\"\r\n          className=\"form-control\"\r\n          value={quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\t  <div className=\"form-group\">\r\n        <label>Fuel</label>\r\n        <select name=\"fuel\" value={fuel} className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {fuels.map((f) => (\r\n            <option key={f} value={f}>\r\n              {f}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\t<div className=\"form-group\">\r\n        <label>Transmission</label>\r\n        <select name=\"transmission\" value={transmission} className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {transmissions.map((t) => (\r\n            <option key={t} value={t}>\r\n              {t}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n\r\n      <div className=\"form-group\">\r\n        <label>Product Type</label>\r\n        <select name=\"type\" value={type} className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {types.map((t) => (\r\n            <option key={t} value={t}>\r\n              {t}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Brand</label>\r\n        <select\r\n          name=\"brand\"\r\n          className=\"form-control\"\r\n          onChange={handleBrandChange}\r\n          value={selectedBrand ? selectedBrand : brand._id}\r\n        >\r\n          <option>Please select</option>\r\n          {brands.length > 0 &&\r\n            brands.map((b) => (\r\n              <option key={b._id} value={b._id}>\r\n                {b.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n      \r\n      <div>\r\n          <label>Model Categories</label>\r\n          <Select\r\n            mode=\"multiple\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Please select\"\r\n            value={arrayOfModels}\r\n          onChange={(value) => setArrayOfModels(value)}>\r\n         \r\n       \r\n            {modelOptions.length &&\r\n              modelOptions.map((m) => (\r\n                <Option key={m._id} value={m._id}>\r\n                  {m.name}\r\n                </Option>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n      \r\n\r\n      <br />\r\n      <button className=\"btn btn-outline-info\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductUpdateForm;\r\n",{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":28,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"247","line":10,"column":10,"nodeType":"245","messageId":"246","endLine":10,"endColumn":15},{"ruleId":"248","severity":1,"message":"249","line":64,"column":6,"nodeType":"250","endLine":64,"endColumn":8,"suggestions":"251"},{"ruleId":"248","severity":1,"message":"252","line":23,"column":6,"nodeType":"250","endLine":23,"endColumn":12,"suggestions":"253"},{"ruleId":"243","severity":1,"message":"254","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":22},{"ruleId":"243","severity":1,"message":"255","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":16},{"ruleId":"243","severity":1,"message":"256","line":8,"column":3,"nodeType":"245","messageId":"246","endLine":8,"endColumn":17},{"ruleId":"257","severity":1,"message":"258","line":7,"column":8,"nodeType":"259","endLine":7,"endColumn":45},{"ruleId":"243","severity":1,"message":"260","line":2,"column":17,"nodeType":"245","messageId":"246","endLine":2,"endColumn":21},{"ruleId":"248","severity":1,"message":"252","line":16,"column":6,"nodeType":"250","endLine":16,"endColumn":13,"suggestions":"261"},{"ruleId":"243","severity":1,"message":"262","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":1,"column":28,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"260","line":2,"column":17,"nodeType":"245","messageId":"246","endLine":2,"endColumn":21},{"ruleId":"243","severity":1,"message":"263","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":16},{"ruleId":"248","severity":1,"message":"264","line":24,"column":6,"nodeType":"250","endLine":24,"endColumn":8,"suggestions":"265"},{"ruleId":"248","severity":1,"message":"266","line":15,"column":6,"nodeType":"250","endLine":15,"endColumn":8,"suggestions":"267"},{"ruleId":"243","severity":1,"message":"268","line":19,"column":9,"nodeType":"245","messageId":"246","endLine":19,"endColumn":15},{"ruleId":"243","severity":1,"message":"260","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":14},{"ruleId":"243","severity":1,"message":"269","line":8,"column":10,"nodeType":"245","messageId":"246","endLine":8,"endColumn":22},{"ruleId":"243","severity":1,"message":"270","line":8,"column":24,"nodeType":"245","messageId":"246","endLine":8,"endColumn":38},{"ruleId":"243","severity":1,"message":"271","line":10,"column":8,"nodeType":"245","messageId":"246","endLine":10,"endColumn":19},{"ruleId":"248","severity":1,"message":"272","line":26,"column":6,"nodeType":"250","endLine":26,"endColumn":8,"suggestions":"273"},{"ruleId":"243","severity":1,"message":"274","line":31,"column":7,"nodeType":"245","messageId":"246","endLine":31,"endColumn":11},{"ruleId":"248","severity":1,"message":"275","line":45,"column":6,"nodeType":"250","endLine":45,"endColumn":8,"suggestions":"276"},{"ruleId":"243","severity":1,"message":"277","line":20,"column":5,"nodeType":"245","messageId":"246","endLine":20,"endColumn":9},{"ruleId":"243","severity":1,"message":"278","line":22,"column":5,"nodeType":"245","messageId":"246","endLine":22,"endColumn":9},{"ruleId":"243","severity":1,"message":"279","line":25,"column":5,"nodeType":"245","messageId":"246","endLine":25,"endColumn":10},{"ruleId":"243","severity":1,"message":"280","line":28,"column":5,"nodeType":"245","messageId":"246","endLine":28,"endColumn":17},{"ruleId":"243","severity":1,"message":"281","line":30,"column":5,"nodeType":"245","messageId":"246","endLine":30,"endColumn":9},{"ruleId":"243","severity":1,"message":"282","line":32,"column":5,"nodeType":"245","messageId":"246","endLine":32,"endColumn":13},{"ruleId":"243","severity":1,"message":"274","line":33,"column":1,"nodeType":"245","messageId":"246","endLine":33,"endColumn":5},{"ruleId":"243","severity":1,"message":"283","line":36,"column":1,"nodeType":"245","messageId":"246","endLine":36,"endColumn":7},{"ruleId":"257","severity":1,"message":"258","line":17,"column":9,"nodeType":"259","endLine":21,"endColumn":11},{"ruleId":"243","severity":1,"message":"284","line":6,"column":9,"nodeType":"245","messageId":"246","endLine":6,"endColumn":24},{"ruleId":"243","severity":1,"message":"285","line":41,"column":10,"nodeType":"245","messageId":"246","endLine":41,"endColumn":17},{"ruleId":"248","severity":1,"message":"286","line":52,"column":5,"nodeType":"250","endLine":52,"endColumn":7,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":65,"column":29,"nodeType":"290","messageId":"291","endLine":65,"endColumn":31},{"ruleId":"243","severity":1,"message":"278","line":25,"column":5,"nodeType":"245","messageId":"246","endLine":25,"endColumn":9},{"ruleId":"243","severity":1,"message":"292","line":29,"column":5,"nodeType":"245","messageId":"246","endLine":29,"endColumn":11},{"ruleId":"243","severity":1,"message":"283","line":38,"column":1,"nodeType":"245","messageId":"246","endLine":38,"endColumn":7},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["295"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["296"],"'MailOutlined' is defined but never used.","'GoMail' is defined but never used.","'LogoutOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.",["297"],"'useEffect' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'loadBrand'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["299"],"'Option' is assigned a value but never used.","'EditOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'LocalSearch' is defined but never used.","React Hook useEffect has a missing dependency: 'loadModel'. Either include it or remove the dependency array.",["300"],"'year' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadBrands'. Either include it or remove the dependency array.",["301"],"'type' is assigned a value but never used.","'slug' is assigned a value but never used.","'brand' is assigned a value but never used.","'transmission' is assigned a value but never used.","'fuel' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'LoadingOutlined' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["302"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'models' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [dispatch]",{"range":"319","text":"320"},"Update the dependencies array to be: [history, user]",{"range":"321","text":"322"},"Update the dependencies array to be: [count, history]",{"range":"323","text":"324"},"Update the dependencies array to be: [loadBrand]",{"range":"325","text":"326"},"Update the dependencies array to be: [loadCategory]",{"range":"327","text":"328"},"Update the dependencies array to be: [loadModel]",{"range":"329","text":"330"},"Update the dependencies array to be: [loadBrands]",{"range":"331","text":"332"},"Update the dependencies array to be: [loadProduct]",{"range":"333","text":"334"},[2344,2346],"[dispatch]",[763,769],"[history, user]",[486,493],"[count, history]",[587,589],"[loadBrand]",[526,528],"[loadCategory]",[918,920],"[loadModel]",[1688,1690],"[loadBrands]",[1687,1689],"[loadProduct]"]